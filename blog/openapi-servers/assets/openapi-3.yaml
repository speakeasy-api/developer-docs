openapi: 3.1.0
servers:
- url: https://speakeasy.bar
- description: The staging server.
  url: https://staging.speakeasy.bar
- description: A per-organization and per-environment API.
  url: https://{organization}.{environment}.speakeasy.bar
  variables:
    environment:
      default: prod 
      description: The environment name. Defaults to the production environment.
      enum:
      - prod
      - staging
      - dev
    organization:
      default: api
      description: The organization name. Defaults to a generic organization.
info:
  contact:
    email: support@speakeasy.bar
    name: Speakeasy Support
    url: https://support.speakeasy.bar
  description: A secret underground bar that serves drinks to those in the know.
  summary: A bar that serves drinks.
  title: The Speakeasy Bar
  version: 1.0.0
components:
  schemas:
    APIError:
      properties:
        code:
          title: Code
          type: string
        details:
          title: Details
          type: object
        message:
          title: Message
          type: string
      title: APIError
      type: object
    AuthenticatePostRequest:
      properties:
        password:
          title: Password
          type: string
        username:
          title: Username
          type: string
      title: AuthenticatePostRequest
      type: object
    AuthenticatePostResponse:
      properties:
        token:
          title: Token
          type: string
      title: AuthenticatePostResponse
      type: object
    Drink:
      properties:
        name:
          description: The name of the drink.
          examples:
          - Old Fashioned
          - Manhattan
          - Negroni
          title: Name
          type: string
        price:
          description: The price of one unit of the drink in US cents.
          examples:
          - 1000
          - 1200
          - 1500
          title: Price
          type: number
        productCode:
          description: The product code of the drink, only available when authenticated.
          examples:
          - AC-A2DF3
          - NAC-3F2D1
          - APM-1F2D3
          title: Productcode
          type: string
        stock:
          description: The number of units of the drink in stock, only available when
            authenticated.
          title: Stock
          type: integer
        type:
          $ref: '#/components/schemas/DrinkType'
      required:
      - name
      - price
      title: Drink
      type: object
    DrinkType:
      description: An enumeration.
      enum:
      - cocktail
      - non-alcoholic
      - beer
      - wine
      - spirit
      - other
      title: DrinkType
    Error:
      properties:
        code:
          title: Code
          type: string
        message:
          title: Message
          type: string
      title: Error
      type: object
    Ingredient:
      properties:
        name:
          description: The name of the ingredient.
          examples:
          - Sugar Syrup
          - Angostura Bitters
          - Orange Peel
          title: Name
          type: string
        productCode:
          description: The product code of the ingredient, only available when authenticated.
          examples:
          - AC-A2DF3
          - NAC-3F2D1
          - APM-1F2D3
          title: Productcode
          type: string
        stock:
          description: The number of units of the ingredient in stock, only available
            when authenticated.
          examples:
          - 10
          - 5
          - 0
          title: Stock
          type: integer
        type:
          $ref: '#/components/schemas/IngredientType'
      required:
      - name
      - type
      title: Ingredient
      type: object
    IngredientType:
      description: An enumeration.
      enum:
      - fresh
      - long-life
      - packaged
      title: IngredientType
    Order:
      properties:
        productCode:
          description: The product code of the drink or ingredient.
          examples:
          - AC-A2DF3
          - NAC-3F2D1
          - APM-1F2D3
          title: Productcode
          type: string
        quantity:
          description: The number of units of the drink or ingredient to order.
          minimum: 1.0
          title: Quantity
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the order.
        type:
          $ref: '#/components/schemas/OrderType'
      required:
      - type
      - productCode
      - quantity
      - status
      title: Order
      type: object
    OrderType:
      description: An enumeration.
      enum:
      - drink
      - ingredient
      title: OrderType
    Status:
      description: An enumeration.
      enum:
      - pending
      - processing
      - complete
      title: Status
    Webhook:
      description: An enumeration.
      enum:
      - stockUpdate
      title: Webhook
    WebhooksSubscribePostRequest:
      properties:
        url:
          title: Url
          type: string
        webhook:
          $ref: '#/components/schemas/Webhook'
      title: WebhooksSubscribePostRequest
      type: object
paths:
  /authenticate:
    post:
      description: Authenticate with the API by providing a username and password.
      operationId: authenticate_authenticate_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatePostRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatePostResponse'
          description: Successful Response
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Default Response
      summary: Authenticate
      tags:
      - authentication
  /drink/{name}:
    get:
      description: Get a drink.
      operationId: get_drink_drink__name__get
      parameters:
      - in: path
        name: name
        required: true
        schema:
          title: Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drink'
          description: Successful Response
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Default Response
      summary: Get Drink
      tags:
      - drinks
  /drinks:
    get:
      description: Get a list of drinks.
      operationId: list_drinks_drinks_get
      parameters:
      - in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/DrinkType'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Drink'
                title: Response List Drinks Drinks Get
                type: array
          description: Successful Response
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Default Response
      summary: List Drinks
      tags:
      - drinks
  /ingredients:
    get:
      description: Get a list of ingredients.
      operationId: list_ingredients_ingredients_get
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              title: Ingredients
              type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Ingredient'
                title: Response List Ingredients Ingredients Get
                type: array
          description: Successful Response
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Default Response
      summary: List Ingredients
      tags:
      - ingredients
  /order:
    post:
      description: Create an order.
      operationId: create_order_order_post
      parameters:
      - in: query
        name: callback_url
        required: false
        schema:
          title: Callback Url
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Order'
              title: Body
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successful Response
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Default Response
      summary: Create Order
      tags:
      - orders
  /webhooks/subscribe:
    post:
      description: Subscribe to webhooks.
      operationId: subscribe_to_webhooks_webhooks_subscribe_post
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/WebhooksSubscribePostRequest'
              title: Body
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Default Response
      summary: Subscribe To Webhooks
      tags:
      - configuration
