openapi: 3.1.0
info:
  title: Books API
  version: 0.1.0
  x-speakeasy-retries:
    strategy: backoff
    backoff:
      initialInterval: 500
      maxInterval: 60000
      maxElapsedTime: 3600000
      exponent: 1.5
    statusCodes:
    - 5XX
    retryConnectionErrors: true
  description: Your bookish project description
paths:
  /api/books/:
    get:
      operationId: api_books_list
      description: Get a list of all books available in the library with optional
        filtering and pagination.
      summary: Retrieve a list of books
      tags:
      - Books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
    post:
      operationId: api_books_create
      description: Add a new book to the library collection by providing the necessary
        details.
      summary: Create a new book
      tags:
      - Books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{id}/:
    get:
      operationId: api_books_retrieve
      description: Get the details of a specific book by its ID.
      summary: Retrieve a specific book
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - Books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: api_books_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: api_books_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: api_books_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/books/{id}/author_books/:
    get:
      operationId: api_books_author_books_list
      description: Retrieve all books written by the same author as the specified
        book.
      summary: Get all books by the same author
      parameters:
      - in: query
        name: author
        schema:
          type: string
        description: Filter books by author
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      - in: query
        name: published_date
        schema:
          type: string
        description: Filter books by published date
      tags:
      - Books
      - Authors
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
              examples:
                ExampleBook:
                  value:
                  - title: A Tale of Two Cities
                    author: Charles Dickens
                    published_date: '1859-04-30'
                  summary: Example of a book object
                  description: This example demonstrates how to use the Book API
          description: ''
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 500
          maxInterval: 60000
          maxElapsedTime: 3600000
          exponent: 1.5
        statusCodes:
        - 5XX
        retryConnectionErrors: true
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        author:
          type: string
          maxLength: 100
        published_date:
          type: string
          format: date
      required:
      - author
      - id
      - published_date
      - title
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        author:
          type: string
          maxLength: 100
        published_date:
          type: string
          format: date
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
- url: http://127.0.0.1:8000/
  description: Development server
